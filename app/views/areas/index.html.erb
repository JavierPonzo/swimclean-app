<div class="container py-4">
  <h1 class="text-center display-5 fw-bold mb-3">💦 SwimSafe Lake Constance</h1>
  <p class="text-center text-muted mb-4">Find your favorite beach. Report algae. Keep the lake comfy for everyone. 🫧</p>

  <div class="row text-center mb-5">
  <div class="col-md-4">
    <div style="font-size: 2rem;">📍</div>
    <h5 class="fw-bold mt-2">Explore swimming spots</h5>
    <p class="text-muted">Use the interactive map to discover popular places around the lake.</p>
  </div>
  <div class="col-md-4">
    <div style="font-size: 2rem;">🧪</div>
    <h5 class="fw-bold mt-2">Share your observations</h5>
    <p class="text-muted">Notice algae or green water? Send a quick update to support others.</p>
  </div>
  <div class="col-md-4">
    <div style="font-size: 2rem;">💙</div>
    <h5 class="fw-bold mt-2">Enjoy & protect</h5>
    <p class="text-muted">Your input helps keep the lake beautiful and fun for everyone.</p>
  </div>
</div>


  <div class="mb-3 d-flex gap-2">
    <input type="text" id="beach-search" class="form-control" placeholder="Search for a beach..." />
    <button id="locate-btn" class="btn btn-outline-primary">📍 Use My Location</button>
  </div>


  <div id="map" class="mb-4 rounded" style="height: 500px;"></div>

  <%= form_with model: Area.new, url: areas_path, local: true do |f| %>
    <div id="public-form" class="card shadow-sm mb-4" style="display: none;">
    <div class="card-header d-flex justify-content-between align-items-center">
      <strong>Add New Swimming Spot</strong>
      <button id="close-public-form" class="btn-close" aria-label="Close"></button>
    </div>
    <div class="card-body">
      <div class="row g-2">
        <div class="col-md-4">
          <%= f.label :name, "Name" %>
          <%= f.text_field :name, class: "form-control", required: true %>
        </div>
        <div class="col-md-4">
          <%= f.label :algae_index, "Water Condition" %>
          <%= f.select :algae_index, options_for_select([
            ['🟢 Fresh & Clear', 0],
            ["🟡 It's Okay", 1],
            ['🔴 Lots of Algae', 2]
          ]), {}, class: "form-select", id: "algae_index_select" %>
        </div>
        <div class="col-md-4 d-flex align-items-end">
          <%= f.submit "Add Spot", class: "btn btn-primary w-100" %>
        </div>
      </div>
      <%= f.hidden_field :lat, id: "public_area_lat" %>
      <%= f.hidden_field :lng, id: "public_area_lng" %>
      <%= f.hidden_field :polygon, value: nil %>
    </div>
  </div>

  <% end %>

  <div class="mb-4">
    <h5>Submit Algae Report</h5>
    <%= form_with model: Report.new, url: reports_path, local: true do |f| %>
      <div class="row g-2">
        <div class="col-md-4">
          <%= f.label :area_id, "Beach" %>
          <%= f.select :area_id, options_from_collection_for_select(@areas, :id, :name), {}, class: "form-select" %>
        </div>
        <div class="col-md-4">
          <%= f.label :algae_level, "Algae Level" %>
          <%= f.select :algae_level, options_for_select(["Clean", "Medium", "High"]), {}, class: "form-select" %>
        </div>
        <div class="col-md-4">
          <%= f.label :comment %>
          <%= f.text_field :comment, placeholder: "Optional", class: "form-control" %>
        </div>
        <div class="col-md-12 mt-2">
          <%= f.submit "Submit Report", class: "btn btn-success" %>
        </div>
      </div>
    <% end %>
  </div>

  <div class="text-center mt-4 mb-2">
    <span class="badge bg-success me-2">🟢 Fresh & Clear</span>
    <span class="badge bg-warning text-dark me-2">🟡 It's Okay</span>
    <span class="badge bg-danger">🔴 Lots of Algae</span>
  </div>
</div>

<!-- Leaflet JS/CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

<script>
  const map = L.map('map').setView([47.6636, 9.1842], 13);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '© OpenStreetMap contributors'
  }).addTo(map);

  const areas = <%= raw @areas.to_json(
    only: [:id, :name, :lat, :lng, :algae_index, :polygon, :water_temperature],
    methods: [:latest_comments]
  ) %>;

  console.log(areas);

  areas.forEach(area => {
    let color = area.algae_index < 0.5 ? 'green' : (area.algae_index < 1.5 ? 'yellow' : 'red');
    let levelLabel = ["Clean", "Medium", "High"][Math.round(area.algae_index)];

    let commentsHTML = "";
    if (area.latest_comments && area.latest_comments.length > 0) {
      commentsHTML = "<br><b>Comments:</b><br>" + area.latest_comments.map(c => {
      const cap = c.charAt(0).toUpperCase() + c.slice(1);
      return `💬 ${cap}`;
      }).join("<br>");
    }

    let tempHTML = area.water_temperature ? `<br>🌡️Water Temp: ${area.water_temperature}°C` : "";

    const popupContent = `<b>${area.name}</b><br>🌿Algae Level: ${levelLabel}${tempHTML}${commentsHTML}`;

    if (area.polygon && area.polygon.length > 0) {
      L.polygon(area.polygon, {
        color,
        fillColor: color,
        fillOpacity: 0.4,
        weight: 2
      }).addTo(map).bindPopup(popupContent);
    } else {
      L.circleMarker([area.lat, area.lng], {
        radius: 10,
        fillColor: color,
        color: "#000",
        weight: 1,
        fillOpacity: 0.8
      }).addTo(map).bindPopup(popupContent);
    }
  });


  // Public click-to-add marker
  let selectedMarker = null;
  map.on('click', function (e) {
    const form = document.getElementById('public-form');
    if (form) {
      form.style.display = 'flex';
      document.getElementById('public_area_lat').value = e.latlng.lat;
      document.getElementById('public_area_lng').value = e.latlng.lng;
    }

    if (selectedMarker) map.removeLayer(selectedMarker);

    selectedMarker = L.marker(e.latlng, { draggable: true }).addTo(map);
    selectedMarker.bindPopup("New Swimming Spot").openPopup();

    selectedMarker.on("dragend", function (event) {
      const { lat, lng } = event.target.getLatLng();
      document.getElementById('public_area_lat').value = lat;
      document.getElementById('public_area_lng').value = lng;
    });
  });

  // Admin-only drawing
  <% if current_user&.admin? %>
    const drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    const drawControl = new L.Control.Draw({
      draw: {
        polygon: {
          allowIntersection: false,
          showArea: true,
          shapeOptions: { color: 'blue' }
        },
        polyline: false,
        circle: false,
        rectangle: false,
        marker: false,
        circlemarker: false
      },
      edit: { featureGroup: drawnItems }
    });
    map.addControl(drawControl);

    map.on(L.Draw.Event.CREATED, function (e) {
      drawnItems.clearLayers();
      drawnItems.addLayer(e.layer);
      const coords = e.layer.getLatLngs()[0].map(c => [c.lat, c.lng]);
      document.getElementById('area_polygon').value = JSON.stringify(coords);
    });

    map.on('click', function (e) {
      document.getElementById('admin-form')?.style?.setProperty('display', 'flex');
      document.getElementById('area_lat').value = e.latlng.lat;
      document.getElementById('area_lng').value = e.latlng.lng;
    });
  <% end %>

  // Search bar
  document.getElementById("beach-search").addEventListener("input", function () {
    const q = this.value.toLowerCase();
    const match = areas.find(a => a.name.toLowerCase().includes(q));
    if (match) {
      map.setView([match.lat, match.lng], 15);
    }
  });

  // Geolocation button
  document.getElementById("locate-btn").addEventListener("click", () => {
    if (!navigator.geolocation) return alert("Geolocation not supported");
    navigator.geolocation.getCurrentPosition((pos) => {
      const { latitude, longitude } = pos.coords;
      map.setView([latitude, longitude], 15);
      L.circle([latitude, longitude], {
        radius: 50,
        color: "blue",
        fillColor: "#30f",
        fillOpacity: 0.3
      }).addTo(map).bindPopup("You are here").openPopup();
    });
  });

  const publicForm = document.getElementById("public-form");
  const closeFormBtn = document.getElementById("close-public-form");

  map.on('click', function (e) {
    if (publicForm) {
      publicForm.style.display = "block";
      document.getElementById('public_area_lat').value = e.latlng.lat;
      document.getElementById('public_area_lng').value = e.latlng.lng;
    }

    if (selectedMarker) map.removeLayer(selectedMarker);

    selectedMarker = L.marker(e.latlng, { draggable: true }).addTo(map);
    selectedMarker.bindPopup("New Swimming Spot").openPopup();

    selectedMarker.on("dragend", function (event) {
      const { lat, lng } = event.target.getLatLng();
      document.getElementById('public_area_lat').value = lat;
      document.getElementById('public_area_lng').value = lng;
    });
  });

  if (closeFormBtn) {
    closeFormBtn.addEventListener("click", () => {
      publicForm.style.display = "none";
      if (selectedMarker) {
        map.removeLayer(selectedMarker);
        selectedMarker = null;
      }
    });
  }

</script>
